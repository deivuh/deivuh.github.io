<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[David Hsieh]]></title>
  <link href="http://davidhsiehlo.com/atom.xml" rel="self"/>
  <link href="http://davidhsiehlo.com/"/>
  <updated>2015-01-20T08:18:24-06:00</updated>
  <id>http://davidhsiehlo.com/</id>
  <author>
    <name><![CDATA[David Hsieh]]></name>
    <email><![CDATA[me@davidhsiehlo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Look Back at 2014]]></title>
    <link href="http://davidhsiehlo.com/blog/2015/01/19/a-look-back-at-2014/"/>
    <updated>2015-01-19T21:48:44-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2015/01/19/a-look-back-at-2014</id>
    <content type="html"><![CDATA[<p>Inspired by <a href="http://blog.fogus.me">Fogus</a>, I decided to make my own list of some of the things I discovered or accomplished in 2014, in no particular order</p>

<!-- more -->


<h2>Books read</h2>

<ul>
<li><a href="http://www.amazon.com/Guide-Good-Life-Ancient-Stoic/dp/0195374614/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1421587969&amp;sr=1-1&amp;keywords=stoicism">A Guide to the Good Life: The Ancient Art of Stoic Joy</a> &ndash; A great introduction to Stoicism</li>
<li><a href="http://www.amazon.com/gp/product/0578012812/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0578012812&amp;linkCode=as2&amp;tag=dahslo-20&amp;linkId=5AJB2CTPLRBSZJXD">Getting Real</a> &ndash; A book by the founders of 37signals. Great advice on developing and shipping your startup product.</li>
<li><a href="http://www.amazon.com/gp/product/0307463745/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0307463745&amp;linkCode=as2&amp;tag=dahslo-20&amp;linkId=355STMSOOC63GARN">Rework</a> &ndash; Another book by the founders of 37signals. Has similar contents as <em>Getting Real</em>, I&rsquo;d recommend skipping <em>Getting Real</em> and reading this one.</li>
<li><a href="http://www.amazon.com/gp/product/0804137501/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0804137501&amp;linkCode=as2&amp;tag=dahslo-20&amp;linkId=BVMVID2T7Z4VAKZW">Remote: Office Not Required</a> &ndash; The last book yet released by the founders of 37signals. As the title suggests, explains the benefits of and how to work remotely.</li>
<li><a href="http://www.amazon.com/gp/product/0804139296/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0804139296&amp;linkCode=as2&amp;tag=dahslo-20&amp;linkId=NJFATBBCEEGJO2H5">Zero to One: Notes on Startups, or How to Build the Future</a> &ndash; By the cofounder and investor Peter Thiel and his former student Blake Masters. A must read for anyone interested in enterpreneurship and startups.</li>
<li><a href="http://www.amazon.com/Fortune-Cookie-Principle-great-business/dp/1489583947/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1421587891&amp;sr=1-1&amp;keywords=cookie+fortune+principle">The Fortune Cookie Principle: The 20 keys to a great brand story and why your business needs one</a> &ndash; A book with great ideas about PR &amp; marketing, in which the author explains the power of storytelling for a brand or business.</li>
</ul>


<h2>Tech events assisted</h2>

<ul>
<li>FIT 2014</li>
<li>Space Apps Challenge 2014</li>
</ul>


<h2>Side projects completed</h2>

<ul>
<li><a href="http://twentyoneapp.com">TwentyOne</a></li>
<li><a href="http://secretsantaservicehq.com">Secret Santa Service</a></li>
<li><a href="https://github.com/deivuh/DODropletManager-OSX">DO Droplet Manager</a></li>
<li><a href="http://moodingt.davidhsiehlo.com/">MoodInGT</a></li>
</ul>


<h2>Languages and frameworks used in projects</h2>

<p>Meteor.js, Processing, Rails, Sinatra, Swift, Objective-C, Python</p>

<h2>MOOCs</h2>

<ul>
<li><a href="https://www.udacity.com/course/ud853">Developing Android Apps</a></li>
<li><a href="https://www.coursera.org/course/socialpsychology">Social psychology</a></li>
</ul>


<h2>Podcasts discovered</h2>

<ul>
<li><a href="http://ecorner.stanford.edu/podcasts.html">Stanford Entrepreneurial Thought Leaders</a></li>
<li><a href="http://www.dancarlin.com/hardcore-history-series/">Hardcore History</a></li>
</ul>


<h2>Healthy accomplishments</h2>

<ul>
<li>First 10k race</li>
<li>Total distance ran: 181.1km</li>
<li>Most steps in a day: 59,902 &ndash; In great trip to Chicago and Indianapolis</li>
<li>Switched from Stronglifts 5x5 to Greyskull LP strength program &ndash; Got to break my squats plateau.</li>
</ul>


<h2>Games played</h2>

<ul>
<li>Cave Story+</li>
<li>Tropico</li>
<li>Hearthstone</li>
<li>Killing Floor</li>
</ul>


<h2>Documentaries watched</h2>

<ul>
<li><a href="http://www.imdb.com/title/tt2821314/?ref_=fn_al_tt_1">The Rise and Rise of Bitcoin</a></li>
<li><a href="http://www.imdb.com/title/tt3268458/?ref_=fn_al_tt_2">The Internet&rsquo;s Own Boy: The Story of Aaron Swartz</a></li>
<li><a href="http://www.imdb.com/title/tt2608732/?ref_=fn_al_tt_2">TPB AFK: The Pirate Bay Away from Keyboard</a></li>
<li><a href="http://www.imdb.com/title/tt2087878/?ref_=nv_sr_3">Minecraft: The Story of Mojang</a></li>
</ul>


<h2>Great TV shows discovered</h2>

<ul>
<li><a href="http://www.imdb.com/title/tt2243973/?ref_=fn_al_tt_1">Hannibal</a></li>
<li><a href="http://www.imdb.com/title/tt1475582/?ref_=fn_al_tt_1">Sherlock</a></li>
<li><a href="http://www.imdb.com/title/tt1856010/?ref_=fn_al_tt_1">House of Cards</a></li>
<li><a href="http://www.imdb.com/title/tt2543312/?ref_=nv_sr_1">Halt and Catch Fire</a></li>
<li><a href="http://www.imdb.com/title/tt2575988/?ref_=fn_al_tt_1">Silicon Valley</a></li>
<li><a href="http://www.imdb.com/title/tt0248654/?ref_=nv_sr_1">Six Feet Under</a></li>
</ul>


<h2>Gunplas built</h2>

<ul>
<li><a href="http://www.hlj.com/product/BAN971075">MG 00 Gundam Seven Sword/G</a></li>
<li><a href="https://otakusurf.wordpress.com/2013/05/15/review-video-mg-nu-gundam-ver-ka/">MG Nu Gundam Ver. Ka</a>
I don&rsquo;t normally build gunplas, and in fact, these were my first two. But I learned and actually enjoyed the whole process of cutting, sanding, assembling, painting and top coating.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ship It! Things I Learned in the Process of Shipping My App]]></title>
    <link href="http://davidhsiehlo.com/blog/2014/09/13/ship-it-things-i-learned-in-the-process-of-shipping-my-app/"/>
    <updated>2014-09-13T20:09:36-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2014/09/13/ship-it-things-i-learned-in-the-process-of-shipping-my-app</id>
    <content type="html"><![CDATA[<p>Most of us have  probably come up with a cool idea for an app at one time or another: the app that no one else seems to have come up with, or just an app that we believe that everyone needs. Some of us just let the idea pass, while others, inspired by that idea, proceed to brainstorm, plan and start building that app.</p>

<p>Months later, while some have published their app, the rest of us have probably <del>stalled</del> abandoned the project, or let it fall to the bottom of the list of our priorities, and started working on another idea. Rinse and repeat.</p>

<p>Even though I usually don’t have problems delivering projects to clients, I do struggle delivering my own projects. Why? Because it’s my own project, and we developers tend to be perfectionists when we are talking about making our own product. By being perfectionists, I mean that we never stop looking to add more features to our project, or ditching what we have done because we just found out that there are better ways to do it.</p>

<p>By getting my <del>first</del> personal app, <a href="https://itunes.apple.com/us/app/twenty-one-form-new-habits/id903695313?mt=8">TwentyOne</a>, published on the App Store, I learned some important things to consider when working on a personal project.</p>

<!-- more -->


<h2>1. Focus on what you are working on, write down everything else</h2>

<p>If you have already started on one project, and come up with an idea for yet another project, write it down and keep working. Keep a list of all your projects. You will probably come up with more ideas for those projects, so just write it all down, and when you have finished the on you have been working on, you’ll have a list of more matured and developed ideas, making them way easier to start with.</p>

<p>What I do, is to keep all my notes and ideas collected on <a href="http://www.evernote.com">Evernote</a>, I usually write every raw idea on a single document and create a new document for a project once I start planning and working on it.</p>

<h2>2. Manage version releases</h2>

<p>While we are building our project, we will probably come up with more ideas, more features for it. If you aim to implement all the features you come up with for your first release, your motivation will probably wane before you get to release it.</p>

<p>When I was working on  <a href="https://itunes.apple.com/us/app/twenty-one-form-new-habits/id903695313?mt=8">TwentyOne</a>, I came up with lots of features that would be cool to implement. If I decided to implement each of them for the first release, it wouldn’t be on the App Store right now, and would have probably kept dragging on, and never seen the light of day. Instead, I decided to cut off the extra features, and focus on its main functionality.</p>

<p>Plan the extra features for the next release, and focus on your project’s core functionality: quality over quantity. Then reconsider those features once you have released the first version. You might even realize that you saved the time and trouble as they might never been worth it.</p>

<h2>3. Take advantage of your initial motivation</h2>

<p>While I was working on <a href="https://itunes.apple.com/us/app/twenty-one-form-new-habits/id903695313?mt=8">TwentyOne</a>, I realized that I had the habit of focusing too much on visuals first, because it gave me a more tangible but false feedback of my progress and gave me a false sensation of reaching the final product faster.</p>

<p>Motivation tends to fall over time, so take advantage when you are full of it, and work on the core, that stuff will probably take longer to work on, and leave that gratification for the end, when you will need it the most to finish.</p>

<h2>4. Get feedback</h2>

<p>The earlier you ask for feedback, the better. And don’t just ask for feedback from anyone, make sure it’s from people who are having the problem you want to solve with your project. By getting feedback you know if you are going in the right direction.</p>

<h2>5. Get the most of it, even if you don’t finish it</h2>

<p>Besides gaining the experience, you can get other things from your finished or unfinished project:</p>

<ul>
<li><p>Make a module out of one feature of your project, it might be handy later on. If you are willing to share, open source it and share it on <a href="http://www.github.com],%20because%20someone%20else%20might%20be%20looking%20to%20do%20something%20similar,%20and%20might%20even%20improve%20it%20.%20I%20did%20this%20with%20the%20animated%20sliding%20table%20cells%20that%20I%20built%20on%20[TwentyOne](https://itunes.apple.com/us/app/twenty-one-form-new-habits/id903695313?mt=8">Github</a>; <a href="https://github.com/deivuh/DHSlidingCell">you can find the repository here</a>.</p></li>
<li><p>If you believe that you might never finish your project for whatever reason, consider open sourcing it if you haven’t. People that are interested in your idea will contribute to it, and your project might actually see the light of day instead of falling into oblivion.</p></li>
</ul>


<p>So, these were some of the lessons I learned on finishing and shipping an idea. Have you ever struggled on getting a side project done? How was your experience?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DigitalOcean Droplets Manager for OSX]]></title>
    <link href="http://davidhsiehlo.com/blog/2014/04/27/digitalocean-droplets-manager-OSX/"/>
    <updated>2014-04-27T23:55:37-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2014/04/27/digitalocean-droplets-manager-OSX</id>
    <content type="html"><![CDATA[<p>A couple days ago, browsing the web, I came across this <a href="http://blog.andrewsomething.com/2014/04/25/digitalocean-indicator-release/">DigitalOcean Indicator</a> made by <a href="http://blog.andrewsomething.com">Andrewsomething</a>. Which manages <a href="https://www.digitalocean.com">DigitalOcean</a> droplets easily from right Ubuntu&rsquo;s panel.</p>

<p>Because I&rsquo;ve got droplets to manage, and there was no OSX version for such a handy tool, I decided to make an OSX version of it.</p>

<p><img class="center" src="http://davidhsiehlo.com/images/posts/DODropletsManager/screenshot.png" title="Droplets Manager" ></p>

<p>So far, the manager does the following:</p>

<ul>
<li>List droplets</li>
<li>Show each droplets status, IP address, distro and region</li>
<li>Copy droplet&rsquo;s IP address to clipboard</li>
<li>Reboot, shutdown and power on droplets</li>
</ul>


<!-- more -->


<p>This app works but is still under development, but for those who want to try it or start using it, <del>you can <a href="http://bit.ly/QOpaBs">download the app file</a></del> (See update).</p>

<p>The source code is at my <a href="https://github.com/deivuh/DODropletManager-OSX">Github repository</a>, for those willing to contribute or just look at it.</p>

<h3>Update</h3>

<p>There have been quite a few contributions, and thanks to them, the app is growing quite fast :). For .app build releases, please visit <a href="https://github.com/deivuh/DODropletManager-OSX/releases">The repository&rsquo;s release section</a> to download them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dagr: A Time of the Day Based LED Lighting System]]></title>
    <link href="http://davidhsiehlo.com/blog/2014/03/25/dagr-a-time-of-the-day-based-led-lighting-system/"/>
    <updated>2014-03-25T01:52:03-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2014/03/25/dagr-a-time-of-the-day-based-led-lighting-system</id>
    <content type="html"><![CDATA[<p>Because I tend to be more focused and productive at late night, I usually stay up late working on some stuff that needs to be done.</p>

<p>Most of the time these stuff involves using my PC, and <a href="http://chriskresser.com/how-artificial-light-is-wrecking-your-sleep-and-what-to-do-about-it">staying up late in front of a screen messes up with our sleep</a>, as it <a href="http://www.webmd.com/sleep-disorders/news/20030620/nighttime-computer-users-may-lose-sleep">lowers our bodies melatonin production</a>. So unless I worked until I felt exhausted, there was no way I could fall asleep within 30 minutes of going to bed.</p>

<p>That was before I discovered <a href="http://justgetflux.com">F.lux</a> a software that adapts your screen to the time of the day. Basically it decreases your screen <a href="http://en.wikipedia.org/wiki/Color_temperature">color temperature</a> at night, and becomes warmer the later at night it is. On their website they even have <a href="http://justgetflux.com/research.html">more information and a collection of links to research documents about light exposure effects on sleeping</a>.</p>

<p><a href="(http://justgetflux.com">F.lux</a>  solves my watching the screen in the dark troubles, but when I needed to do stuff at my desk and not on the screen, all I had was my cool white desk lamp.</p>

<h2>Dagr</h2>

<p>Inspired by F.lux, I decided to make my own light system that changes the color temperature according to the time of the day.</p>

<!-- more -->


<p>So with an <a href="http://arduino.cc/en/Main/arduinoBoardUno">Arduino UNO</a>, a <a href="http://www.seeedstudio.com/depot/Bluetooth-40-Low-Energy-BLE-Shield-v20-p-1631.html">BLE shield</a>, a <a href="http://www.seeedstudio.com/depot/Digital-RGB-LED-FlexiStrip-30-LED-1-Meter-p-1665.html">Digital RGB LED strip</a>, and a 5V DC adapter to power the strip; I could make an Arduino controlled time-of-the-day based light system.</p>

<p>I cut a strip with 7 LEDs, which was enough to cover a fairly small area just below a bunkbed, where my desk is. Because I haven&rsquo;t bought a case for my Arduino, I built one with some old Lego pieces I found few weeks ago, and used some plastic coated wire to hang it to the ceiling.</p>

<p><span class='caption-wrapper'><img class='caption' src='http://davidhsiehlo.com/images/posts/dagr/Dagr.jpg' width='' height='' title='Temporal Lego case'><span class='caption-text'>Temporal Lego case</span></span></p>

<h2>Controlling the light</h2>

<p>The light color temperature can be set automatically according to the current time of your device, manually setting the <a href="http://en.wikipedia.org/wiki/Color_temperature">color temperature</a> from 1000K to 4000K, or manually setting the individual RGB values from the iOS app.</p>

<p>The communication between the iOS app and the Arduino works between the mobile device&rsquo;s Bluetooth and the Arduino&rsquo;s BLE shield.</p>

<p>The temperature to RGB conversion was made based on <a href="http://www.tannerhelland.com/4435/convert-temperature-rgb-algorithm-code/">Tanner Helland&rsquo;s algorithm</a> and the daytime based temperature algorithm was made based on my own preference, with three stages of temperature color change:</p>

<ul>
<li>6:00 AM to 8:00 AM</li>
<li>6:00 PM to 8:00 PM</li>
<li>8:00 PM to 10:00 PM</li>
</ul>


<p><span class='caption-wrapper'><img class='caption' src='http://davidhsiehlo.com/images/posts/dagr/DagrAction.jpg' width='' height='' title='Dagr in action in different modes above my desk'><span class='caption-text'>Dagr in action in different modes above my desk</span></span></p>

<h2>Wrapping it up</h2>

<p>With the stuff I mentioned and a few wires, you can have your own Dagr, time-of-the -day based lighting at your home or office.</p>

<p>You can find the complete code of Dagr for both the iOS app and Arduino are at my repository:
<a href="https://github.com/deivuh/dagr">https://github.com/deivuh/dagr</a>.</p>

<p>Pull requests for functionality, success stories and comments are all welcome :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MKV SRT Extractor for Samsung Plex Users]]></title>
    <link href="http://davidhsiehlo.com/blog/2014/03/15/mkv-srt-extractor-for-samsung-plex-users/"/>
    <updated>2014-03-15T23:51:25-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2014/03/15/mkv-srt-extractor-for-samsung-plex-users</id>
    <content type="html"><![CDATA[<p>After I finally built the <em>Gunpla</em> I got a couple years ago (Which I&rsquo;ll write about  later on). I felt more interested about the series, <a href="http://gundam.wikia.com/wiki/Mobile_Suit_Gundam_00">Gundam 00</a>.</p>

<p>Since I watch most of the series and movies with <a href="https://plex.tv">Plex</a>, I set everything up to watch these new series on my TV. The opening started to play, but there was something missing: The subs! Unless you understand Japanese, subtitles are essential.</p>

<p>Unable to watch anything, I tried to figure out whether it was my TV&rsquo;s Plex client or the Plex Media server configuration. Searching on the web, I found out that the problem was that Samsung&rsquo;s Plex App doesn&rsquo;t support embedded subtitles (e.g. subtitles contained in a MKV container file).</p>

<p>But subtitle files on the same root directory were supported, so what I had to do was to use two tools form <a href="http://www.bunkus.org/videotools/mkvtoolnix/">MKVtoolsnix</a>:</p>

<ul>
<li><p><strong><em>mkvinfo</em></strong> to identify the track inside the MKV containing the subtitles.</p></li>
<li><p><strong><em>mkvextract</em></strong> to extract the subtitles from the identified track.
Since mkvextract is a command line tool, all I needed was to make a small bash script to iterate and extract the subttiles file from each of the MKV files from the current directory:</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">for </span>file in *.mkv
</span><span class='line'><span class="k">do</span>
</span><span class='line'><span class="k">  </span><span class="nv">name</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$file</span> | cut -f1 -d<span class="s1">&#39;.&#39;</span><span class="sb">`</span>     
</span><span class='line'>  mkvextract tracks <span class="s2">&quot;$file&quot;</span> TRACKNUMBER:<span class="s2">&quot;$name&quot;</span>.ass
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>Even though each subtitle file was extracted and named the same as it&rsquo;s corresponding video file, the same problem persisted, the subtitle files were detected but not shown.</p>

<p>It turns out that Samsung&rsquo;s Plex App only support <a href="http://www.matroska.org/technical/specs/subtitles/srt.html">SubRip Text (SRT)</a> files, and the subtitles contained on those MKVs are rich <a href="http://www.matroska.org/technical/specs/subtitles/ssa.html">SubStationAlpha (ASS/SSA)</a> subtitles.</p>

<p>Apparently the support for both <em>SSA</em> subtitle files and embedded subtitles  were due to Samsung SDK restrictions.</p>

<p>Having no success finding a proper <em>SSA</em> to <em>SRT</em> batch converter (for Linux or OSX), I made a little script to extract those SSA subtitles from the MKVs, and converting each of them into SRT format.</p>

<p>You can grab the script <a href="https://github.com/deivuh/MKV-SRT-Extractor">here</a>.</p>

<p>Make sure to have both <a href="https://www.ruby-lang.org/en/downloads/">Ruby</a> and <a href="http://www.bunkus.org/videotools/mkvtoolnix/">MKVToolnix</a> installed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Using Google DNS Wasn't a Great Idea]]></title>
    <link href="http://davidhsiehlo.com/blog/2014/01/29/why-using-google-dns-wasnt-great-idea/"/>
    <updated>2014-01-29T18:51:31-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2014/01/29/why-using-google-dns-wasnt-great-idea</id>
    <content type="html"><![CDATA[<!-- ##Why setting up Google DNS as my router's default DNS server was a bad idea# -->


<p>During the last couple of week of last month, I noticed delays while browsing the web, especially Reddit, up to the point that started to bug me. Was it because of the <a href="http://davidhsiehlo.com/blog/2013/12/20/finally/">recent change made by my ISP</a>? Or because I changed my Tomato router to manage my DSL connection?</p>

<p>The first thing I did was a <a href="http://www.speedtest.net/my-result/3268882393">speed test</a>, but everything seemed to be normal, so it wasn&rsquo;t a speed issue. So the DNS server became my first suspect, since I setup my router to use Google DNS by default, both main and alternate server. But why would Google DNS server be slow? I thought.</p>

<p>So I proceeded to make some tests:</p>

<p>First, I ran a ping test to reddit.com domain:</p>

<pre><code>➜  ~  ping www.reddit.com
PING a659.b.akamai.net (165.254.57.144): 56 data bytes
64 bytes from 65.120.60.171: icmp_seq=400 ttl=48 time=89.331 ms
64 bytes from 65.120.60.171: icmp_seq=401 ttl=48 time=93.348 ms
64 bytes from 65.120.60.171: icmp_seq=402 ttl=48 time=92.700 ms
....
64 bytes from 65.120.60.171: icmp_seq=755 ttl=48 time=360.952 ms
64 bytes from 65.120.60.171: icmp_seq=756 ttl=48 time=284.577 ms
64 bytes from 65.120.60.171: icmp_seq=757 ttl=48 time=201.729 ms
</code></pre>

<p>The average was about 90 ms, which is slow but acceptable; but there were times were it reached up to 360+ ms of latency! That&rsquo;s high enough to be noticeable when browsing.</p>

<!-- more -->


<p>So I did some ping tests to Google DNS server too:</p>

<pre><code>➜  ~  ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8): 56 data bytes
64 bytes from 8.8.8.8: icmp_seq=0 ttl=38 time=57.962 ms
64 bytes from 8.8.8.8: icmp_seq=1 ttl=38 time=58.151 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=38 time=60.308 ms
...
64 bytes from 8.8.8.8: icmp_seq=104 ttl=38 time=510.392 ms
64 bytes from 8.8.8.8: icmp_seq=105 ttl=38 time=236.928 ms
64 bytes from 8.8.8.8: icmp_seq=106 ttl=38 time=154.764 ms
</code></pre>

<p>Apparently, the speed problem was indeed originated from the DNS server connection.</p>

<p>That&rsquo;s when the first possibility came to my mind. To confirm, the next thing I did was to run a traceroute to the Google DNS server:</p>

<pre><code>➜  ~  traceroute 8.8.8.8
traceroute to 8.8.8.8 (8.8.8.8), 64 hops max, 52 byte packets
 1  192.168.2.1 (192.168.2.1)  1.204 ms  1.048 ms  1.230 ms
 2  10.192.34.115 (10.192.34.115)  6.730 ms  6.707 ms  6.607 ms
 3  10.192.56.149 (10.192.56.149)  7.416 ms  7.702 ms  7.261 ms
 4  * * *
 5  10.192.37.213 (10.192.37.213)  12.911 ms  48.465 ms  89.934 ms
 6  10.192.37.169 (10.192.37.169)  152.473 ms  137.849 ms  16.745 ms
 7  10.192.55.150 (10.192.55.150)  18.766 ms  19.843 ms  192.897 ms
 8  10.192.12.38 (10.192.12.38)  195.543 ms  171.874 ms  442.763 ms
 9  inetin-ptobar-ptobarrios-6-tge1-0-0.uninet.net.mx (187.174.64.26)   309.486 ms  309.899 ms  307.067 ms
10  ideint-miami-americas-15-tge0-0-3-0.uninet.net.mx (201.125.198.10)      58.064 ms  58.251 ms  57.935 ms
11  customer-201-125-242-65.uninet.net.mx (201.125.242.65)  58.259 ms   58.076 ms  58.378 ms
12  209.85.253.74 (209.85.253.74)  60.183 ms  61.403 ms
209.85.253.118 (209.85.253.118)  103.468 ms
13  209.85.252.96 (209.85.252.96)  79.788 ms  111.421 ms
209.85.252.98 (209.85.252.98)  100.892 ms
14  209.85.243.254 (209.85.243.254)  70.847 ms
209.85.248.31 (209.85.248.31)  75.368 ms
    209.85.243.254 (209.85.243.254)  57.866 ms
15  * * *
16  google-public-dns-a.google.com (8.8.8.8)  77.301 ms  76.182 ms  73.930 ms
</code></pre>

<p>By using an IP location service, <a href="http://www.iplocation.net/index.php?query=209.85.243.254">the IP address of the last hop resulted from Georgia, USA</a>.</p>

<p>Well, just as I thought, the DNS server reached was actually from the US, as I checked thereafter, <a href="http://blog.archit.in/2012/02/google-public-dns-server-locations-list/">there are actually no Google DNS servers closer to Guatemala</a>.</p>

<p>Well, so I setup the DNS servers that were previously provided by my ISP, and problem solved.</p>

<pre><code>➜  ~  ping www.reddit.com
PING a659.b.akamai.net (186.151.236.160): 56 data bytes
64 bytes from 186.151.236.160: icmp_seq=0 ttl=59 time=7.843 ms
64 bytes from 186.151.236.160: icmp_seq=1 ttl=59 time=7.932 ms
64 bytes from 186.151.236.160: icmp_seq=2 ttl=59 time=8.010 ms
</code></pre>

<h3>Conclusion</h3>

<p>The location of the DNS server does affect speed significantly when browsing, or in whatever activity in which domain name resolutions are involved.  Make sure that the DNS server you&rsquo;re using is actually close to you. Unless there are any restrictions by your ISP&rsquo;s DNS server, stick just with it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finally, No More Double NAT From My ISP]]></title>
    <link href="http://davidhsiehlo.com/blog/2013/12/20/finally/"/>
    <updated>2013-12-20T23:05:52-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2013/12/20/finally</id>
    <content type="html"><![CDATA[<p>A few years ago, after struggling with BitTorrent clients and online game servers closed port warning and error messages, I’ve been learning about DSL routing and computer networks. That’s when I realised that I would never be able to have an open port or a public IP address to my home network, because my network was behind an ATM Bridge.</p>

<p>Having helped to setup some home networks to some family members, I ran some tests and apparently their DSL router had an actual dynamic public IP address, and were able to have open ports. PPPoE was the type of connection it showed after checking their DSL routers, and they actually had the same ISP. My deduction was that old internet users got stuck with IPoATM connections, and new users had PPPoE connections; it made sense, because when my home’s internet service was acquired, a technician was required to make the router configuration and installation, while new users just had to plug and play their line filters and DSL routers. Until few months ago my solution was to <a href="http://davidhsiehlo.com/blog/2013/12/15/bypassing-a-nat-slash-firewall-by-reverse-ssh-tunneling/">setup a SSH reverse tunnel to access my home network</a>, but with this, I don&rsquo;t need to anymore.</p>

<p>Last week after noticing my internet connection was gone, I called to my ISP tech support, and it went like this:</p>

<!-- more -->


<blockquote><p><strong>Tech support guy:</strong> Hello […] how can I help you?</p>

<p><strong>Me:</strong> I don&rsquo;t have internet connection.</p>

<p><strong>Tech support guy:</strong> All right, let me check […]</p>

<p><strong>Tech support guy:</strong> Sir, are you nearby the router?</p>

<p><strong>Me:</strong> Yes&hellip; &ndash;_&ndash;</p></blockquote>

<p>Here I was expecting to hear the <a href="http://www.youtube.com/watch?feature=player_detailpage&amp;v=nn2FB1P_Mn8#t=10">“Have you tried to turn off and on again?”</a> and ping routine, and ready to tell him to just skip it, but that&rsquo;s not what happened:</p>

<blockquote><p><strong>Tech support guy:</strong> Could you get a pointy object and use it to press the <em>reset button</em> located in the back of the router?</p></blockquote>

<p>This is when I instantly thought about the possibility of having a infrastructure change of my internet connection</p>

<p>After reseting the router, that was it, the IPoATM was gone, and the ISP pre flashed (not the factory default)
PPPoE configuration was loaded. Dynamic public IP address check; externally reachable port forwarding check! Yeah! :)</p>

<blockquote><p><strong>Me:</strong> Oh, it did work! Thanks :)</p></blockquote>

<p>Having direct internet connection, I decided to use my WRT54GL router as my main DSL and network manager and use my ISP provided DSL router as a bridge. But right after selection the connection configuration on the DSL router’s web GUI, the bridge option wasn’t there, and actually the ISP PPPoE’s connection configuration was the only option. So far I was more than annoyed by my ISP’s restrictions, since I’ve been facing one after another. Searching on the web, I found out that <a href="http://www.boards.ie/vbulletin/showthread.php?p=63841326#post63841326">people that were facing the same problem solved it by upgrading their firmware to a newer generic version</a>. I used the firmware linked in <a href="http://www.boards.ie/vbulletin/showthread.php?p=63841326#post63841326">that post</a>, but instead of setting up a TFTP and BOOTP server as indicated, I downloaded and used the official setup wizard (for Windows only) <a href="http://download.modem-help.co.uk/mfcs-A/Alcatel/Modems/TG585/v7/Wizards/Setup/Windows/EN/">here</a>.</p>

<p>With the new flashed generic firmware, everything went smoothly: I setup the DSL router to bridge mode, configured my WRT54GL <a href="http://www.polarcloud.com/tomato">Tomato’s firmware</a> to PPPoE mode, entering the connections user and password (my ISP, as you guessed doesn’t provide those, but it could be easily found out by using a <a href="http://stackoverflow.com/questions/1383142/show-password-as-text-control">password field shower script</a> before flashing the router), and done! :)</p>

<p>All I did after was setup a <a href="http://www.noip.com">dynamic DNS account</a> and use it on Tomato’s client to automatically update a subdomain to the current non-static IP address.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bypassing a NAT/Firewall by Reverse SSH Tunneling]]></title>
    <link href="http://davidhsiehlo.com/blog/2013/12/15/bypassing-a-nat-slash-firewall-by-reverse-ssh-tunneling/"/>
    <updated>2013-12-15T23:07:00-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2013/12/15/bypassing-a-nat-slash-firewall-by-reverse-ssh-tunneling</id>
    <content type="html"><![CDATA[<p>Not until last week, my ISP finally decided to change my home&rsquo;s internet connection from IPoATM to PPPoE, and giving me a more direct access to the internet, thus using my router’s NAT configuration.</p>

<h2>The Problem</h2>

<p>Before they made the changes, I had to struggle with server applications or having to figure out how to access my home’s pc while I was at somewhere else. The only benefit I had from this was having a somewhat more secure network, only those connected to the same ATM bridge would have access to my home network. Asking my ISP to setup a port forwarding to my modem wasn’t a choice, since they would just want to try to sell me a <em>public static IP service</em>.</p>

<p><img class="center" src="http://davidhsiehlo.com/images/posts/ssh-reverse-tunneling/problem.png" title="The problem" alt="All incoming connections are blocked"></p>

<!-- more -->


<h2>Using SSH Reverse Tunneling</h2>

<p>Reading on the web I found out about reverse SSH tunnelling, which consists on creating a SSH connection from the destination machine behind the firewall to the source machine. Since an SSH connection was already open from the destination to the source, all it’s left is to connect through the same SSH connection.</p>

<p>The solution would be as shown below.</p>

<p><img class="center" src="http://davidhsiehlo.com/images/posts/ssh-reverse-tunneling/reverse-ssh.png" title="Reverse SSH Tunnel" alt="An incoming connection is made by forwarding it to the established outcoming connection "></p>

<p>First, the destination has to create an SSH connection to the source</p>

<pre><code>$ ssh -R 1234:localhost:22 user@sourceHost
</code></pre>

<ul>
<li>The <code>-R</code> option specifies port forwarding</li>
<li><code>1234</code> is the port to listen to, it can be any unused port</li>
<li><code>localhost</code> is the host in which the port will be forwarded to</li>
<li><code>22</code> is the port to which the listening port connection will be forwarded to, in this case the default port in which the SSH connection is made</li>
<li><code>user</code> is the username at the source machine</li>
<li><code>sourceHost</code> is the source machine’s domain or IP Address</li>
</ul>


<p>So, here the port <code>1234</code> will be opened and listening at the remote machine, any connection made to this port will be forwarded to port <code>22</code> at the localhost through the SSH connection.</p>

<p>This works, but in this case, but both the source and destination machines would have to be on 24/7 in order to keep this connect, which wouldn’t be that convenient at all.</p>

<h2>My setup with Tomato and a VPS</h2>

<p>I have a VPS accesible from anywhere, and a <a href="http://en.wikipedia.org/wiki/Linksys_WRT54G_series#WRT54GL%20router">WRT54GL</a> with <a href="http://www.polarcloud.com/tomato">Tomato firmware</a> at my home network which can access to my HomePC. Since both hosts do stay on 24/7 is possible to use them to keep an open SSH connection between them.</p>

<p>So, including those to the equation, the solution setup would be:</p>

<ul>
<li> The router creates an SSH connection with port forwarding to the VPS</li>
<li> When needed, from my laptop I can connect from anywhere to my VPS</li>
<li> Then from the VPS, a reverse SSH tunnel is made from the listening port through the established connection</li>
<li> From the router I can just Wake on LAN my Home PC, and access through another ssh connection o any other way.</li>
</ul>


<p><img class="center" src="http://davidhsiehlo.com/images/posts/ssh-reverse-tunneling/final-setup.png" title="Final setup" alt="My final setup using my home`s router and a VPS"></p>

<p>Because the router could be restarted once in a while, it would have to reconnect automatically after it’s up again, and that’s possible to do so with Tomato.</p>

<p>First, I had to make sure that Tomato is able to create the SSH connection without authentication, to do so, the router’s rsa public key should be added to the VPS’s /etc/authorized_keys file.</p>

<p>Keeping in mind that Tomato uses <a href="https://matt.ucc.asn.au/dropbear/dropbear.html">Dropbear</a> SSH client/server, and not OpenSSH, the command to generate the key’s would be:</p>

<pre><code>$ dropbearkey -t rsa -f /jffs/rsa_key 
</code></pre>

<ul>
<li>The option <code>-t</code> specifies the type of encryption, and <code>rsa</code> is the encoding we want</li>
<li><code>-f /jffs/rsa_key</code> specifies the file in which the private key will be written to. Notice that I am creating it in the <code>/jffs</code> directory. <a href="http://tomatousb.org/doc:jffs">JFFS</a> is a mounted filesystem part of the router’s flash internal memory; because everything else outside is on RAM, we want it to persist.</li>
</ul>


<p>Once the keys are generated, the private will be written to the specified file and the public will be printed on the screen. This public key has to be placed inside the <code>/.ssh/authorized_keys</code> file on the VPS.</p>

<p>After setting up the keys, we can test if it works by trying to connect from the router&rsquo;s command line:</p>

<pre><code>$ ssh -y -f -N -i /jffs/rsa_key -R 1234:0.0.0.0:22 user@VPSHost
</code></pre>

<ul>
<li>The <code>-y</code> option is to accept any remote host key. Since the .ssh/known_hosts file will always be lost after reboot, our VPS host would always be unknown</li>
<li>The <code>-N</code> option to not specify a remote command (This is dropbear SSH, and by default it seems to be used mostly to run remote commands instead of keeping  an session)</li>
<li>The <code>-i</code> option to use our identity file, our private key to authenticate. /jffs/rsa_key is the private key file.</li>
<li>The <code>-R</code> to specify port forwarding</li>
<li><code>1234</code> is the port to listen to, it can be any unused port</li>
<li><code>0.0.0.0</code> is the host in which the port will be forwarded to, 0.0.0.0 is equal to <em>any</em> host, we can also replace this with the routers external IP address (which would be the same as the home PC’s IP address)</li>
<li><code>22</code> is the port to which the 1234 port connection will be forwarded to</li>
<li><code>user</code> is the username to use to login to the VPS</li>
<li><code>VPSHost</code> is the VPS address</li>
</ul>


<p>If a remote session in the VPS opens, then it worked.</p>

<p>Inside the Tomato web GUI, paste the above command to <em>Administration->Scripts->WanUp section</em>. This will make Tomato run open an SSH connection to the VPS once the internet connection is established after restarting.</p>

<p>That’s it, now you can open a reverse SSH connection on the VPS by using the command</p>

<pre><code> $ ssh user@localhost  -p 1234
</code></pre>

<p>Where <code>user</code> would be your router’s SSH user and <code>1234</code> the port you set to listen and forward.</p>

<p>You can wake your PC inside your routers network with <em>ether-wake</em></p>

<pre><code> $ ether-wake 00:11:22:33:44:55
</code></pre>

<p>Where <code>00:11:22:33:44:55</code> would be your PC&rsquo;s MAC address. For convenience, we can make Tomato to create a wake up script, paste the following line in <em>Administration->Scripts->Init</em> with the correct MAC address</p>

<pre><code> $ echo "/usr/bin/ether-wake 00:1C:DF:32:AC:41" &gt; /home/root/wakeDesktopPC.sh 
</code></pre>

<p>Viola! All it takes now is to run the script with <code>./wakeDesktopPC.sh</code> and access your PC once it finishes booting up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress!]]></title>
    <link href="http://davidhsiehlo.com/blog/2013/11/10/hello-octopress/"/>
    <updated>2013-11-10T22:35:00-06:00</updated>
    <id>http://davidhsiehlo.com/blog/2013/11/10/hello-octopress</id>
    <content type="html"><![CDATA[<p><strong>Hello Octopress!</strong>
Just migrated (or rather started over) to a new blogging platform: <a href="http://octopress.org">Octopress</a>.</p>
]]></content>
  </entry>
  
</feed>
